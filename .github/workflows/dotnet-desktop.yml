name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build .NET Framework Application
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET Framework
        uses: microsoft/setup-msbuild@v1
        with:
          vs-version: 'latest'

      - name: Restore NuGet packages
        run: nuget restore YourSolution.sln

      - name: Build solution
        run: msbuild /p:Configuration=Release YourSolution.sln

      - name: Publish artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            **/*.dll
            **/*.exe
            **/*.pdb
            **/*.config

  test:
    name: Run Tests and Analyze Code
    runs-on: windows-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET Framework
        uses: microsoft/setup-msbuild@v1
        with:
          vs-version: 'latest'

      - name: Restore NuGet packages
        run: nuget restore YourSolution.sln

      - name: Run unit tests
        run: |
          vstest.console.exe **/*Tests.dll

      - name: Code analysis
        run: |
          # Run static code analysis tools if any
          # Example: sonarscanner (if configured)

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: path/to/test-results

  deploy:
    name: Deploy to Staging
    runs-on: windows-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: Deploy application
        run: |
          # Add your deployment commands here
          # Example: Copy files to staging environment or trigger deployment script

  notify:
    name: Notify Team
    runs-on: ubuntu-latest
    needs: [build, test, deploy]
    if: failure() || success()
    
    steps:
      - name: Notify on failure
        if: failure()
        uses: slackapi/slack-github-action@v1
        with:
          slack_token: ${{ secrets.SLACK_TOKEN }}
          channel: '#your-channel'
          text: |
            CI/CD Pipeline failed:
            - Build: ${{ job.status.build }}
            - Test: ${{ job.status.test }}
            - Deploy: ${{ job.status.deploy }}

      - name: Notify on success
        if: success()
        uses: slackapi/slack-github-action@v1
        with:
          slack_token: ${{ secrets.SLACK_TOKEN }}
          channel: '#your-channel'
          text: |
            CI/CD Pipeline succeeded:
            - Build: ${{ job.status.build }}
            - Test: ${{ job.status.test }}
            - Deploy: ${{ job.status.deploy }}

  
